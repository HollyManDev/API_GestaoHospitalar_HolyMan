// <auto-generated />
using System;
using GestaoHospitalar.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoHospitalar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241129084158_teste123")]
    partial class teste123
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoHospitalar.Models.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAgendamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgendamentoID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Cama", b =>
                {
                    b.Property<int>("CamaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamaID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeitoID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CamaID");

                    b.HasIndex("LeitoID");

                    b.ToTable("Camas");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Cargo", b =>
                {
                    b.Property<int>("CargoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CargoID");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Consulta", b =>
                {
                    b.Property<int>("ConsultaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TratamentoRecomendado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsultaID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.ContatoEmergencia", b =>
                {
                    b.Property<int>("ContatoEmergenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContatoEmergenciaID"));

                    b.Property<string>("ContatoEmergenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContatoEmergenciaRelacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContatoEmergenciaTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.HasKey("ContatoEmergenciaID");

                    b.HasIndex("PacienteID");

                    b.ToTable("ContatoEmergencia");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.DepartamentosFuncionarios", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DepartamentoID");

                    b.ToTable("DepartamentosFuncionarios");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.EquipamentoMedico", b =>
                {
                    b.Property<int>("EquipamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipamentoID"));

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("EquipamentoID");

                    b.ToTable("EquipamentosMedicos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Especialidade", b =>
                {
                    b.Property<int>("EspecialidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspecialidadeID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("EspecialidadeID");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Exame", b =>
                {
                    b.Property<int>("ExameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExameID"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacienteID")
                        .HasColumnType("int");

                    b.Property<double>("Preço")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ExameID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Factura", b =>
                {
                    b.Property<int>("FaturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaID"));

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusExist")
                        .HasColumnType("bit");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("FaturaID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.FacturaMedicamento", b =>
                {
                    b.Property<int>("FacturaMedicamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaMedicamentoID"));

                    b.Property<int>("FaturaID")
                        .HasColumnType("int");

                    b.Property<int>("MedicamentoID")
                        .HasColumnType("int");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("float");

                    b.Property<double>("PrecoUnitario")
                        .HasColumnType("float");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("FacturaMedicamentoID");

                    b.HasIndex("FaturaID");

                    b.HasIndex("MedicamentoID");

                    b.ToTable("FacturasMedicamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FornecedorID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FornecedorID");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioID"));

                    b.Property<int>("CargoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("FuncionarioID");

                    b.HasIndex("CargoID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.HistoricoAtendimento", b =>
                {
                    b.Property<int>("HistoricoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoricoID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("HistoricoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("HistoricoAtendimentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.HistoricoVisita", b =>
                {
                    b.Property<int>("VisitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitaID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("TipoVisita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitaID");

                    b.HasIndex("MedicoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("HistoricoVisitas");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.InventarioMedicamento", b =>
                {
                    b.Property<int>("MedicamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoID"));

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("datetime2");

                    b.Property<int>("FornecedorID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacienteID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("MedicamentoID");

                    b.HasIndex("FornecedorID");

                    b.HasIndex("PacienteID");

                    b.ToTable("InventarioMedicamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Leito", b =>
                {
                    b.Property<int>("LeitoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeitoID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("LeitoID");

                    b.ToTable("Leitos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Medico", b =>
                {
                    b.Property<int>("MedicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspecialidadeID")
                        .HasColumnType("int");

                    b.Property<string>("HorarioTrabalho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicoID");

                    b.HasIndex("EspecialidadeID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Outro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Outros");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteID"));

                    b.Property<string>("BI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoricoMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeitoID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seguro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteID");

                    b.HasIndex("LeitoID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Prescricao", b =>
                {
                    b.Property<int>("PrescricaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescricaoID"));

                    b.Property<int>("ConsultaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPrescricao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrucoesUso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacienteID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PrescricaoID");

                    b.HasIndex("ConsultaID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Prescricoes");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Recibo", b =>
                {
                    b.Property<int>("ReciboID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReciboID"));

                    b.Property<DateTime>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FaturaID")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ReciboID");

                    b.HasIndex("FaturaID");

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.ResultadoExame", b =>
                {
                    b.Property<int>("ResultadoExameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoExameID"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExameID")
                        .HasColumnType("int");

                    b.Property<string>("InterpretacaoMedica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("ValoresReferencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultadoExameID");

                    b.HasIndex("ExameID");

                    b.HasIndex("PacienteID");

                    b.ToTable("ResultadosExames");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.TelefoneFuncionario", b =>
                {
                    b.Property<int>("TelefoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefoneID"));

                    b.Property<int>("FuncionarioID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TelefoneID");

                    b.HasIndex("FuncionarioID");

                    b.ToTable("TelefoneFuncionario");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Agendamento", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Medico", "Medico")
                        .WithMany("Agendamentos")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Cama", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Leito", "Leito")
                        .WithMany()
                        .HasForeignKey("LeitoID");

                    b.Navigation("Leito");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Consulta", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.ContatoEmergencia", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany("ContatosEmergencia")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Exame", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Paciente", null)
                        .WithMany("Exames")
                        .HasForeignKey("PacienteID");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Factura", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.FacturaMedicamento", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Factura", "Factura")
                        .WithMany("FaturasMedicamentos")
                        .HasForeignKey("FaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.InventarioMedicamento", "Medicamento")
                        .WithMany("FaturasMedicamentos")
                        .HasForeignKey("MedicamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Funcionario", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Cargo", "cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.DepartamentosFuncionarios", "departamentoFuncionario")
                        .WithMany()
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargo");

                    b.Navigation("departamentoFuncionario");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.HistoricoAtendimento", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany("HistoricoAtendimentos")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.HistoricoVisita", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Medico", "Medico")
                        .WithMany("HistoricoVisitas")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany("HistoricoVisitas")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.InventarioMedicamento", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Fornecedor", "Fornecedor")
                        .WithMany("InventarioMedicamentos")
                        .HasForeignKey("FornecedorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", null)
                        .WithMany("InventarioMedicamentos")
                        .HasForeignKey("PacienteID");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Medico", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Paciente", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Leito", "Leito")
                        .WithMany("Pacientes")
                        .HasForeignKey("LeitoID");

                    b.Navigation("Leito");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Prescricao", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("ConsultaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", null)
                        .WithMany("Prescricoes")
                        .HasForeignKey("PacienteID");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Recibo", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.ResultadoExame", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Exame", "Exame")
                        .WithMany("ResultadosExames")
                        .HasForeignKey("ExameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoHospitalar.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exame");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.TelefoneFuncionario", b =>
                {
                    b.HasOne("GestaoHospitalar.Models.Funcionario", "Funcionario")
                        .WithMany("Telefones")
                        .HasForeignKey("FuncionarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Especialidade", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Exame", b =>
                {
                    b.Navigation("ResultadosExames");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Factura", b =>
                {
                    b.Navigation("FaturasMedicamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Fornecedor", b =>
                {
                    b.Navigation("InventarioMedicamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Funcionario", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.InventarioMedicamento", b =>
                {
                    b.Navigation("FaturasMedicamentos");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Leito", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Medico", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Consultas");

                    b.Navigation("HistoricoVisitas");
                });

            modelBuilder.Entity("GestaoHospitalar.Models.Paciente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Consultas");

                    b.Navigation("ContatosEmergencia");

                    b.Navigation("Exames");

                    b.Navigation("HistoricoAtendimentos");

                    b.Navigation("HistoricoVisitas");

                    b.Navigation("InventarioMedicamentos");

                    b.Navigation("Prescricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
